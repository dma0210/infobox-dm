{"version":3,"sources":["js/InfoBox.jsx","js/App.jsx","index.js"],"names":["InfoBox","props","state","isLoaded","items","isToggleON","fullDescription","currentItem","Toggle","bind","slideNext","slidePrev","slideFirst","slideLast","fetch","then","res","json","result","setState","this","length","className","alt","title","src","img","target","href","productUrl","description","slice","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e760e407.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/InfoBox.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class InfoBox extends React.Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoaded: false,\r\n      items: [],\r\n      isToggleON: true,\r\n      fullDescription: null,\r\n      currentItem: 0\r\n\r\n    }\r\n\r\n    this.Toggle = this.Toggle.bind(this);\r\n    this.slideNext = this.slideNext.bind(this);\r\n    this.slidePrev = this.slidePrev.bind(this);\r\n    this.slideFirst = this.slideFirst.bind(this);\r\n    this.slideLast = this.slideLast.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    fetch('https://my-json-server.typicode.com/IlyaLytvynov/ads-box-server/ads')\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result\r\n          })\r\n        }\r\n      )\r\n  }\r\n  Toggle() {\r\n    this.setState(state => ({\r\n      isToggleON: !state.isToggleON\r\n    }))\r\n  }\r\n  slideNext() {\r\n    if (this.state.currentItem < this.state.items.length - 1) {\r\n      this.setState(state => ({\r\n        currentItem: state.currentItem + 1,\r\n        isToggleON: true,\r\n\r\n      }))\r\n\r\n\r\n    }\r\n  }\r\n  slidePrev() {\r\n    if (this.state.currentItem > 0) {\r\n      this.setState(state => ({\r\n        currentItem: state.currentItem - 1,\r\n        isToggleON: true\r\n      }))\r\n    }\r\n  }\r\n  slideFirst() {\r\n    if (this.state.currentItem > 0) {\r\n      this.setState(state => ({\r\n        currentItem: 0,\r\n        isToggleON: true\r\n      }))\r\n    }\r\n  }\r\n  slideLast() {\r\n    if (this.state.currentItem < this.state.items.length - 1) {\r\n      this.setState(state => ({\r\n        currentItem: this.state.items.length - 1,\r\n        isToggleON: true\r\n      }))\r\n    }\r\n  }\r\n  render() {\r\n    if (!this.state.isLoaded) {\r\n      return (\r\n        <p>Loading...</p>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"main\">\r\n          <div className=\"infobox\">\r\n            <div className=\"infobox-block\">\r\n              <div className=\"infobox-information\">\r\n                <div className=\"img-block\">\r\n                  <img alt={this.state.items[this.state.currentItem].title} src={this.state.items[this.state.currentItem].img} />\r\n                </div>\r\n                <div className={this.state.isToggleON ? 'description-block' : 'description-block toggle'}>\r\n                  <div className=\"title-block\">\r\n                    <a target=\"blank\" href={this.state.items[this.state.currentItem].productUrl}><span>{this.state.items[this.state.currentItem].title}</span></a>\r\n                  </div>\r\n                  <div className=\"text\">\r\n                    <p>{this.state.isToggleON ? this.state.items[this.state.currentItem].description.slice(0, 50) + \"...\" : this.state.items[this.state.currentItem].description.slice(0, 50)}\r\n                      <span className={this.state.isToggleON ? 'hidden-element' : 'hidden-element toggle'}>{this.state.items[this.state.currentItem].description.slice(50)}</span></p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"toogle\">\r\n              <button onClick={this.Toggle}>\r\n                {this.state.isToggleON ? 'More information' : 'Hide'}\r\n              </button></div>\r\n            <div className=\"controlButtons\">\r\n              <button onClick={this.slideFirst} className={this.state.currentItem > 0 ? '' : 'non-active'} >{'<<<'}</button>\r\n              <button onClick={this.slidePrev} className={this.state.currentItem > 0 ? '' : 'non-active'} >{'<'}</button>\r\n              <button onClick={this.slideNext} className={this.state.currentItem < this.state.items.length - 1 ? '' : 'non-active'}>{'>'}</button>\r\n              <button onClick={this.slideLast} className={this.state.currentItem < this.state.items.length - 1 ? '' : 'non-active'} >{'>>>'}</button>\r\n            </div>\r\n          </div>\r\n        </div >\r\n      )\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { InfoBox } from './InfoBox';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class App extends Component {\r\n    render() {\r\n\r\n\r\n        return (\r\n\r\n           \r\n                <InfoBox />\r\n           \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './js/App';\r\nimport './css/index.css'\r\n\r\n// ReactDOM.render(React.createElement('h1',undefined, 'Hello world'), document.getElementById('root'));\r\nReactDOM.render(<App />, document.getElementById('appBlock')); // JSX\r\n"],"sourceRoot":""}